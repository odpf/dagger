import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

}
plugins {
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}

def flinkVersion = System.getenv('flinkVersion') ?: '1.9.0'
version "0.0.1"

description = """common dependencies for dagger"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    minimalCommonJar
    dependenciesCommonJar

    minimalCommonJar.extendsFrom runtime
    compileOnly.extendsFrom minimalCommonJar
    testCompile.extendsFrom compileOnly
}

sourceSets {
    main.compileClasspath += configurations.minimalCommonJar
    main.compileClasspath += configurations.dependenciesCommonJar
    main.runtimeClasspath += configurations.minimalCommonJar
    main.runtimeClasspath += configurations.dependenciesCommonJar

    test.compileClasspath += configurations.minimalCommonJar
    test.compileClasspath += configurations.dependenciesCommonJar
    test.runtimeClasspath += configurations.minimalCommonJar
    test.runtimeClasspath += configurations.dependenciesCommonJar
}

dependencies {
    compileOnly 'org.apache.flink:flink-streaming-java_2.11:' + flinkVersion
    compileOnly group: 'org.apache.flink', name: 'flink-table-common', version: flinkVersion
    dependenciesCommonJar 'com.gojek:stencil:2.0.15'

    testImplementation 'junit:junit:4.12'
}

test {
    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
    finalizedBy jacocoTestCoverageVerification
}

jar {
    zip64 true
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}


// TODO: Add jar stage and publish stratergy for common
// Does publishing minimal jar make sense ?

publishing {
    publications {
        shadow(MavenPublication) {
            publication ->
                project.shadow.component(publication)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/odpf/dagger"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

artifactory {
    publish {
        defaults {
            publications('mavenJava')
            properties = ['qa.level': 'basic', 'dev.team': 'core']

            publishBuildInfo = true
            publishArtifacts = true
            publishPom = true
        }
    }

    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.setBuildName('dagger')
    clientConfig.info.setBuildNumber(System.env.BUILD_NUMBER)
}
